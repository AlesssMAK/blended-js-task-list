{"version":3,"file":"index.js","sources":["../src/js/refs.js","../src/js/local-storage-api.js","../src/js/render-tasks.js","../src/js/tasks.js","../src/main.js"],"sourcesContent":["// тут посилання на DOM-елементи\n\nexport const refs = {\n    form: document.querySelector(\".header-form\"),\n    inputTaskName: document.querySelector('input[name=\"taskName\"]'),\n    inputTaskDescription: document.querySelector('input[name=\"taskDescription\"]'),\n    btnAdd: document.querySelector(\".header-form-btn\"),\n    tasksList: document.querySelector(\".tasks-list\"),\n}\n\n","export const saveInLS = (key, data) => {\n    localStorage.setItem(key, JSON.stringify(data));\n};\n\nexport const getFormLS = (key) => { \n    const saveData = localStorage.getItem(key);\n    if (saveData) {\n        const parseData = JSON.parse(saveData);\n        return parseData;\n    }\n    return null;\n};\n\n\n","import { refs } from \"./refs\";\n\nexport const makeTaskList = (tasks) => {\n\n  const markup = tasks\n    .map(({ title, description }) => {\n      return `\n        <li class=\"task-list-item\">\n          <button class=\"task-list-item-btn\">Delete</button>\n          <h3>${title}</h3>\n          <p>${description}</p>\n        </li>`;\n    })\n    .join(\"\");\n\n    refs.tasksList.innerHTML = markup;\n}","\n\nimport { getFormLS, saveInLS } from \"./local-storage-api\";\nimport { makeTaskList } from \"./render-tasks\";\n\nlet tasks = getFormLS(\"tasks\") || [];\n\nexport const getTasks = () => {\n    makeTaskList(tasks);\n}\n\nexport const addTask = (task) => {\n    tasks.push(task);\n    makeTaskList(tasks);\n    saveInLS(\"tasks\", tasks);\n}\n\nexport const deleteTask = (text) => {\n    tasks = tasks.filter(({ title }) => title !== text);\n\n  makeTaskList(tasks);\n  saveInLS('tasks', tasks);\n}\n","// тут будуть слухачі\n\n\nimport { refs } from \"./js/refs\";\nimport { addTask, getTasks, deleteTask } from \"./js/tasks\";\n\ngetTasks();\n\nrefs.form.addEventListener(\"submit\", (event) => {\n  event.preventDefault();\n  const title = refs.inputTaskName.value.trim();\n  const description = refs.inputTaskDescription.value.trim();\n\n  if (!title || !description) {\n    alert('error')\n    return;\n  }\n\n  addTask({ title, description })\n\n  refs.form.reset();\n});\n\nrefs.tasksList.addEventListener(\"click\", (event) => {\n  if (!event.target.classList.contains('task-list-item-btn')) return;\n\n  const title = event.target.nextElementSibling?.textContent.trim();\n\n  if (title) {\n    deleteTask(title);\n  }\n});\n\n"],"names":["refs","saveInLS","key","data","getFormLS","saveData","makeTaskList","tasks","markup","title","description","getTasks","addTask","task","deleteTask","text","event","_a"],"mappings":"ssBAEO,MAAMA,EAAO,CAChB,KAAM,SAAS,cAAc,cAAc,EAC3C,cAAe,SAAS,cAAc,wBAAwB,EAC9D,qBAAsB,SAAS,cAAc,+BAA+B,EAC5E,OAAQ,SAAS,cAAc,kBAAkB,EACjD,UAAW,SAAS,cAAc,aAAa,CACnD,ECRaC,EAAW,CAACC,EAAKC,IAAS,CACnC,aAAa,QAAQD,EAAK,KAAK,UAAUC,CAAI,CAAC,CAClD,EAEaC,EAAaF,GAAQ,CAC9B,MAAMG,EAAW,aAAa,QAAQH,CAAG,EACzC,OAAIG,EACkB,KAAK,MAAMA,CAAQ,EAGlC,IACX,ECTaC,EAAgBC,GAAU,CAErC,MAAMC,EAASD,EACZ,IAAI,CAAC,CAAE,MAAAE,EAAO,YAAAC,KACN;AAAA;AAAA;AAAA,gBAGGD,CAAK;AAAA,eACNC,CAAW;AAAA,cAErB,EACA,KAAK,EAAE,EAERV,EAAK,UAAU,UAAYQ,CAC/B,ECXA,IAAID,EAAQH,EAAU,OAAO,GAAK,GAE3B,MAAMO,EAAW,IAAM,CAC1BL,EAAaC,CAAK,CACtB,EAEaK,EAAWC,GAAS,CAC7BN,EAAM,KAAKM,CAAI,EACfP,EAAaC,CAAK,EAClBN,EAAS,QAASM,CAAK,CAC3B,EAEaO,EAAcC,GAAS,CAChCR,EAAQA,EAAM,OAAO,CAAC,CAAE,MAAAE,KAAYA,IAAUM,CAAI,EAEpDT,EAAaC,CAAK,EAClBN,EAAS,QAASM,CAAK,CACzB,EChBAI,IAEAX,EAAK,KAAK,iBAAiB,SAAWgB,GAAU,CAC9CA,EAAM,eAAc,EACpB,MAAMP,EAAQT,EAAK,cAAc,MAAM,KAAI,EACrCU,EAAcV,EAAK,qBAAqB,MAAM,KAAI,EAExD,GAAI,CAACS,GAAS,CAACC,EAAa,CAC1B,MAAM,OAAO,EACb,MACD,CAEDE,EAAQ,CAAE,MAAAH,EAAO,YAAAC,EAAa,EAE9BV,EAAK,KAAK,OACZ,CAAC,EAEDA,EAAK,UAAU,iBAAiB,QAAUgB,GAAU,OAClD,GAAI,CAACA,EAAM,OAAO,UAAU,SAAS,oBAAoB,EAAG,OAE5D,MAAMP,GAAQQ,EAAAD,EAAM,OAAO,qBAAb,YAAAC,EAAiC,YAAY,OAEvDR,GACFK,EAAWL,CAAK,CAEpB,CAAC"}